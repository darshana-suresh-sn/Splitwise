<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function ($scope, $location, $rootScope, spUtil, $interpolate) {
	var c = this;

	this.data.filterText = "";
	this.showFilter = false;

	this.onClick = function($event, item, url, action) {
		$event.stopPropagation();
		$event.preventDefault();
		if (typeof url == "string") {
			var urlExp = $interpolate(url);
			url = urlExp(item);
			$location.url(url);
		} else if (url && typeof url == "object")
			$location.search(url);
		else {
			var evt = {};
			evt.url = url;
			evt.table = item.className;
			evt.sys_id = item.sys_id;
			evt.record = item;
			evt.rectangle_id = c.options.sys_id;
			evt.action = action;
			// put out the selection with simple list "sl_" prefix
			$location.search('sl_sys_id', evt.sys_id);
			$location.search('sl_table', evt.table);
			$location.search('spa', 1); // spa means "I've got this"
			$rootScope.$broadcast('$sp.list.click', evt);
		}
	};

	if (c.options.table && c.options.disable_record_watcher != 'true')
		spUtil.recordWatch($scope, c.options.table, c.options.filter);

	this.getMaxShownLabel = function(maxEntries, totalCount) {
		if(maxEntries == -1)
		    maxEntries = totalCount;
		if (totalCount == c.data.maxCount || c.data.showGM) {
			if(maxEntries == 1)
				return "${Showing [0] record}".replace('[0]', maxEntries);
			return "${Showing first [0] records}".replace('[0]', maxEntries);
		}
		return "${First [0] of [1]}".replace('[0]', maxEntries).replace('[1]', totalCount);
	};

	this.seeAllPage = c.options.list_page_dv || 'list';
	this.targetPageID = (c.options.sp_page) ? "&target_page_id=" + c.options.sp_page : "";

	c.getMaxHeight = function() {
		return c.options.panel_body_height || 'none';
	};

	c.getActionColor = function(action) {
		return "text-" + action.color;
	};

	c.update = function update() {
			c.server.update();
	}

	c.toggleFilter = function() {
		c.showFilter = !c.showFilter;
	}

}]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel {
position: relative;
}

.panel-heading i {
  cursor: pointer;
  position: absolute;
  padding: 10px;
  top: 0px;
  right: 0px;
  cursor: pointer;
}

.disabled-filter {
	color: #A0A0A0;
}

.list-group-item.ng-enter {
  transition: all 1s;
  -webkit-transition: all 1s;

  background-color: #c0dcfa;
}

.list-group-item.ng-enter-active {
  background-color: #fff;
}

.hide-x-overflow {
  overflow-x: hidden;
}

.translated-html &gt; p {
  margin: 0px;
  padding: 0px;
}

IMG {
  max-width: 320px;
  max-height: 240px;
}

IMG.img-sm {
  max-height: 40px;
  max-width: 40px;
}

.filter-box {
  margin-top: 10px;
}

.panel-footer {
  .number-shown-label {
    margin-top: 0;
    margin-bottom: 0;
    font-size: 16px;
    display: inline-block;
  }

  a {
    color: inherit;
  }
}

.panel-title .fa {
    padding-right: 4px;
}

.list-group-item &gt; a {
	display: inline-block;
}</css>
        <data_table>sp_instance_vlist</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>table,filter,maximum_entries,display_field,color,size,glyph,sp_page</field_list>
        <has_preview>true</has_preview>
        <id>group_simple_list</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>group simple list</name>
        <option_schema>[{"name":"always_show","section":"Behavior","label":"Show even when empty","type":"boolean"},{"name":"panel_body_height","section":"Presentation","label":"List body height","type":"string"},{"name":"image_field","section":"Presentation","label":"Image field","type":"field_name"},{"name":"secondary_fields","section":"Data","label":"Secondary fields","type":"field_list"},{"name":"rounded_images","section":"Presentation","label":"Rounded images","type":"boolean"},{"displayValue":"Page","name":"list_page","section":"Data","label":"List page","type":"reference","value":"sp_page","ed":{"reference":"sp_page"}},{"name":"hide_footer","section":"Presentation","label":"Hide Footer","type":"boolean"},{"displayValue":"UI View","hint":"View to use when target page is a form","name":"view","section":"Behavior","label":"View","type":"reference","value":"sys_ui_view","ed":{"reference":"sys_ui_view"}},{"hint":"If checked, Simple List will not automatically updated based on changes to the filtered records","name":"disable_record_watcher","section":"Behavior","label":"Disable record watcher","type":"boolean"},{"name":"filter_acls","section":"Data","default_value":"false","label":"Enforce field-level Read ACLs on Filter query terms (may alter the query for unprivileged users)","type":"boolean"}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function () {


})()]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-19 16:52:54</sys_created_on>
        <sys_id>3ba2a24b7f724210d94a0cd10d86656f</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>group simple list</sys_name>
        <sys_package display_value="Splitwise" source="sn_splitwise">a8747a317f220210d94a0cd10d86659d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Splitwise">a8747a317f220210d94a0cd10d86659d</sys_scope>
        <sys_update_name>sp_widget_3ba2a24b7f724210d94a0cd10d86656f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-06-19 16:56:30</sys_updated_on>
        <template><![CDATA[<div class="panel panel-{{::c.options.color}} b" ng-if="c.data.isValid && (c.options.always_show == 'true' || c.options.always_show == true || c.data.filterText || c.data.list.length)">
  <div class="panel-heading" ng-if="::!c.options.hide_header">
    <h3 class="h4 panel-title">
      <span ng-if="c.options.glyph">
        <fa name="{{::c.options.glyph}}"></fa>
      </span>{{::c.options.title}}</h3>
    <!-- <i class="fa fa-filter" ng-click="c.toggleFilter()" ng-class="{'disabled-filter': !c.showFilter}"></i> -->
    <div ng-show="c.showFilter">
      <input aria-label="${Filter}" ng-model="c.data.filterText" ng-model-options="{debounce: 300}" sn-focus="c.showFilter" placeholder="{{::data.filterMsg}}" ng-change="c.update()" class="form-control input-sm filter-box">
    </div>
  </div>
  <ul class="list-group hide-x-overflow" ng-style="::{maxHeight: c.getMaxHeight()}" style="overflow-y: auto;" ng-if="c.data.list.length > 0">
    <li ng-repeat="item in c.data.list track by item.sys_id" class="list-group-item">
      <a ng-if="action.glyph || c.options.image_field || (item.display_field.type == 'translated_html' ? item.display_field.value : item.display_field.display_value)" ng-click="c.onClick($event, item, item.url, {})" href="javascript:void(0)" oncontextmenu="return false;">
        <span ng-repeat="action in c.data.actions" href="" ng-click="c.onClick($event, item, action.url, action)" ng-if="action.glyph"
              class="list-action l-h-40 pull-right">
          <fa name="{{action.glyph}}" ng-class="c.getActionColor(action)"></fa>
        </span>
        <span ng-if="c.options.image_field" class="pull-left m-r"
              ng-class="{'avatar': c.options.rounded_images, 'thumb-sm': c.options.rounded_images}">
          <img ng-src="{{item.image_field}}" alt="..." class="img-sm" ng-class="{'img-circle': c.options.rounded_images}">
        </span>
          <div ng-switch on="item.display_field.type" ng-class="{'l-h-40': !item.secondary_fields.length}">
            <span class="translated-html" ng-switch-when="translated_html" ng-bind-html="item.display_field.value"></span>
            <div ng-switch-default>{{item.display_field.display_value}}</div>
          </div>
	  </a>
	    <div>
          <small class="text-muted" ng-repeat="f in item.secondary_fields">
            <span ng-if="!$first"> â€¢ </span>
            <span ng-switch="f.type" title="{{::f.label}}">
              <span ng-switch-when="glide_date">
                <span ng-if="!f.isFuture"> <sn-day-ago date="::f.value"></sn-day-ago> </span>
                <span ng-if="f.isFuture"> {{f.display_value}}</span>
              </span>
              <span ng-switch-when="glide_date_time">
                <span ng-if="!f.isFuture"> <sn-time-ago timestamp="::f.value"></sn-time-ago></span>
                <span ng-if="f.isFuture"> {{f.display_value}}</span>
              </span>
              <span ng-switch-default="">{{f.display_value}}</span>
            </span>
          </small>
        </div>
    </li>
  </ul>
  <div ng-if="!c.data.list.length" class="list-group-item">
     ${No records found}
  </div>
  <div class="panel-footer" ng-if="!c.options.hide_footer && c.options.maximum_entries && c.data.count > c.options.maximum_entries">
    <div class="h4 number-shown-label">{{c.getMaxShownLabel(c.options.maximum_entries, c.data.count)}}</div>
    <a class="pull-right" ng-href="?id={{c.seeAllPage}}&table={{c.options.table}}&filter={{c.options.filter}}{{c.targetPageID}}" aria-label="{{::data.viewAllMsg}} - {{::c.options.title}}">${View all}</a>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
