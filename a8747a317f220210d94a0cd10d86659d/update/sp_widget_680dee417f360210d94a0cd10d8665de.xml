<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($rootScope,$scope, spModal,spUtil) {
	/* widget controller */
	var c = this;
	c.data.group_name = "";
	c.data.expenses = [];

	spUtil.recordWatch($scope, 'sn_splitwise_group', null,function(change){
		c.updateData();
		if(c.data.group_id==change.data.sys_id)
		{
			switch(change.data.operation)
			{
				case "delete":
					c.data.group_name = "";
					c.data.group_id = null;
					break;
				case "update":
					c.data.group_name = change.data.record.name.display_value;
					break;
			}
		}
	});

	c.onDeleteGroup = function(){
		spModal.confirm('Are you sure you want to delete the group '+c.data.group_name+'? This will delete all expenses within the group, however the balances will remain unchanged.').then(function(confirmed) {
			if(confirmed)
			{
				c.server.get({
					action:'deleteGroup',
					group_id:c.data.group_id
				}).then(function(result){
					if(result.data.success)
					{
						spUtil.addInfoMessage("Group "+c.data.group_name+" deleted successfully");
						c.data.group_id = null;
						c.data.group_name = null;
						c.updateData();
					}
					else
						spUtil.addErrorMessage("Something went wrong. Failed to delete group "+c.data.group_name);
				});
			}
		});

	}
	c.onAddExpenseClick = function(){
		var shared = {};
		shared.group_id = c.data.group_id;
		shared.action = "createNew";
		spModal.open({
			title:'Group - '+$scope.data.group_name,
			widget:'add_expense_form',
			shared:shared,
			buttons:[]
		}).then(function(result){
			if(!result.success)
				alert("Something went wrong");
			if(result.primary)
			{
				c.updateData();
			}
		});
	}
	c.onEditGroup = function(){
		spModal.open({
			title:'Group Details',
			widget:'widget-form',
			buttons:[{
				label:'Close'
			}],
			widgetInput:{table:'sn_splitwise_group', sys_id:c.data.group_id}
		});
	}
	c.onExpenseDelete = function(expense){
		spModal.confirm("Delete expense "+expense.expense_name+"? This will revert the related balances back to its previous state.").
		then(function(confirmed){
			if(confirmed)
			{
				c.server.get({
					expense_id:expense.sys_id,
					group_id:c.data.group_id,
					action:'deleteExpense'
				}).then(function(result){
					c.data.expenses = result.data.expenses;
					$rootScope.$emit('expenseUpdated',expense.expense_id);

				});
			}
		});

	}
	c.onExpenseClick = function(expenseItem){
		var shared = {};
		shared.selectedExpense = expenseItem;
		shared.group_id = c.data.group_id;
		shared.action = "openExisting";
		spModal.open({
			title:'Group - '+$scope.data.group_name,
			widget:'add_expense_form',
			//widgetInput:{selectedExpense:expenseItem},
			shared:shared,
			buttons:[]
		}).then(function(result){
			if(!result.success)
				alert("Something went wrong");
			if(result.primary)
				c.updateData();
		});
	};
	c.updateData = function(){
		c.server.get({
			group_id:c.data.group_id,
			action:'getExpenses'
		}).then(function(response){
			c.data.expenses = response.data.expenses;
			if(!c.data.group_id)
			{
				c.data.group_id = response.data.group_id;
				c.data.group_name = response.data.group_name;
			}
		});
	}

	//$rootScope.$on('$sp.list.click',function(e, response) {
	$rootScope.$on('selectGroup',function(e,response){
		//if(response && response.table=="sn_splitwise_group" &&
			// response.sys_id)
		{	
			c.data.group_id = $rootScope.group_id;//response.sys_id;
			c.data.group_name = $rootScope.group_name;//response.record.display_field.display_value;
			c.updateData();
		}
	});
};]]></client_script>
        <controller_as>c</controller_as>
        <css>.glyphMargin{
  margin:0 5px 0 0;
}
tbody tr:hover{
  background-color:#e2e0ef !important;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>expense_table_view</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Expense table view</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */
	var getExpensesInGroup = function(group_id)
	{
		var gr = new GlideRecord('sn_splitwise_expense');
		gr.query('group_id',group_id);
		gr.orderByDesc('date');
		gr.query();
		data.expenses = [];
		var res;
		while(gr.next())
		{
			res = {};
			//$sp.getRecordDisplayValues(res,gr,'sys_id,expense_name,paid_by,total_amount');
			res.sys_id = gr.sys_id.getValue();
			res.expense_name = gr.expense_name.getValue();
			res.date = gr.date.getValue();
			res.paid_by = gr.paid_by.getDisplayValue();
			res.paid_by_id = gr.paid_by.getValue();
			res.total_amount = parseFloat(gr.total_amount.getValue()).toFixed(2);
			data.expenses.push(res);
		}
	}
	var deleteGroup = function(group_id)
	{
		var gr = new GlideRecord('sn_splitwise_group');
		gr.get(group_id);
		data.success = gr.deleteRecord();
	}
	var deleteExpense = function(expense_id)
	{
		var gr = new GlideRecord('sn_splitwise_expense');
		gr.addQuery('sys_id',expense_id);
		gr.query();

		if(gr.next())
		{
			data.success = gr.deleteRecord();
		}
	}
	var getLatestGroupID = function()
	{
		var gr = new GlideRecord('sn_splitwise_group');
		gr.orderByDesc('sys_created_on');
		gr.query();
		while(gr.next())
		{
			var memberList = gr.members.split(',');
			gs.info(memberList);
			gs.info(gs.getUserID());
			if(memberList && memberList.indexOf(gs.getUserID())!=-1)
			{
				data.group_id = gr.sys_id.getValue();
				data.group_name = gr.name.getValue();
				break;

			}

		}
	}
	if(input && input.group_id)
	{
		if(input.action=='getExpenses')
			getExpensesInGroup(input.group_id);
		else if(input.action=='deleteGroup')
			deleteGroup(input.group_id);
		else if(input.action=='deleteExpense')
		{
			deleteExpense(input.expense_id);
			if(data.success)
				getExpensesInGroup(input.group_id);
		}
	}
	else
	{
		//getLatestGroupID();
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-13 12:30:09</sys_created_on>
        <sys_id>680dee417f360210d94a0cd10d8665de</sys_id>
        <sys_mod_count>207</sys_mod_count>
        <sys_name>Expense table view</sys_name>
        <sys_package display_value="Splitwise" source="sn_splitwise">a8747a317f220210d94a0cd10d86659d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Splitwise">a8747a317f220210d94a0cd10d86659d</sys_scope>
        <sys_update_name>sp_widget_680dee417f360210d94a0cd10d8665de</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-06-26 09:10:09</sys_updated_on>
        <template><![CDATA[<div class="containerBody">
                              
<div>
  <button id="addGroupBtn" ng-click="c.onAddExpenseClick()"
          class="btn btn-{{options.color}} btn-primary m-b"
          ng-disabled="!data.group_id">
    Add New Expense
  </button>
  <!--
  <button id="deleteGroupBtn" ng-click="c.onDeleteGroup()"
          class="btn btn-{{options.color}} m-b btn-secondary"
          ng-disabled="!data.group_id">
    Delete Group
  </button>
  <button id="editGroupBtn" ng-click="c.onEditGroup()"
          class="btn btn-{{options.color}} m-b"
          ng-disabled="!data.group_id">
    View Group
  </button>
  -->
</div>  
<div class="panel panel-{{options.color}} b" ng-class="{'data-table-high-contrast': accessibilityModeEnabled}">
  <div class="panel-heading form-inline" ng-hide="options.hide_header">
    <h2 class="panel-title" style="display:inline">
      <span class="glyphMargin">
        <fa name="money"></fa>
      </span><b>{{data.group_name}}</b>${: Expenses}</h2>
    <div class="clearfix"></div>
  </div>


  <div class="panel-body">

    <div class="clearfix"></div>
    <div class="alert alert-info" ng-if="!data.group_id">
      ${Select a group to view its expenses}
    </div>
    <div class="alert alert-info" ng-if="data.group_id && !data.expenses.length">
      ${No expenses yet}
    </div>
    <table class="table table-striped table-responsive" ng-if="data.expenses.length">
      <caption class="sr-only"><b>{{c.data.group_name}}</b>: Expenses</caption>
      <thead>
        <tr>
          <th class="text-nowrap" cope="col" role="columnheader">
            <div class="th-title" tabindex="0">Name</div>
          </th>
          <th class="text-nowrap" cope="col" role="columnheader">
            <div class="th-title" tabindex="0">Paid by</div>
          </th>
          <th class="text-nowrap" cope="col" role="columnheader">
            <div class="th-title" tabindex="0">Amount.</div>
          </th>
          <th class="text-nowrap" cope="col" role="columnheader">
          </th>
        </tr>
      </thead>
      <tbody>
        <tr ng-repeat="item in c.data.expenses" ng-click="c.onExpenseClick(item)">
          <td >{{item.expense_name}}
          </td>
          <td>{{item.paid_by}}
          </td>
          <td>
            â‚¹{{item.total_amount}}
          </td>
          <td>
            <button title="Delete expense"
                    ng-click="c.onExpenseDelete(item)">
                          <span>
              <fa name="trash"></fa>
            </span>
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
                              
</div>]]></template>
    </sp_widget>
</record_update>
