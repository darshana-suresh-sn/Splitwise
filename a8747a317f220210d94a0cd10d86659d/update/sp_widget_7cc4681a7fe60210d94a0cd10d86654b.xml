<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function() {
	/* widget controller */
	var c = this;
	var memberIdCounter = 1;
	c.showExpenseForm = false;
	c.expenseObj = {};
	//c.expenseObj.paidBy = scope.user.sys_id;
	//c.expenseObj.amount = 0;
	//c.expenseObj.splitEqually = true;
	c.expenseMembers = {};
	c.memberList = c.data.memberList;
	//c.areInputsValid = false;

	c.onAddExpense = function()
	{
		c.showExpenseForm = true;
	}

	c.onAddMember = function()
	{
		var table = document.getElementById("splittingTable");
		if(table)
		{
			var member = {};
			member.name = c.memberList && c.memberList.length>0 ? c.memberList[0].sys_id:'';
			member.amount = 0;
			member.id = memberIdCounter++;
			c.expenseMembers[member.id] = member;
			var inputRow = document.createElement("tr");
			inputRow.setAttribute('id','row_'+member.id);

			//member name column
			var inputCell = document.createElement("td");
			var input = document.createElement("select");
			input.setAttribute('ng-model', 'c.expenseMembers['+member.id+'].name');
			input.setAttribute('id','name_'+member.id);
			input.innerHTML = "";
			for(var i=0;i<c.memberList.length;++i)
			{
				input.innerHTML +="<option value="+c.memberList[i].sys_id+">"+c.memberList[i].name+"</option>";
			}
			input.classList.add('splitInput');
			inputCell.append(input);
			inputRow.append(inputCell);

			//member amount column
			inputCell = document.createElement("td");
			input = document.createElement("input");
			input.setAttribute('type','number');
			input.setAttribute('id','amount_'+member.id);
			input.setAttribute('ng-model','c.expenseMembers['+member.id+'].amount');
			input.classList.add('splitInput');
			input.setAttribute('ng-disabled','c.expenseObj.splitEqually');
			inputCell.append(input);
			inputRow.append(inputCell);

			//delete button column
			inputCell = document.createElement('td');
			input = document.createElement('button');
			input.setAttribute('id','close_'+member.id);
			input.setAttribute('ng-click','c.deleteRow('+member.id+')');
			input.classList.add('closeBtn');
			input.innerText = 'x';
			inputCell.append(input);
			inputRow.append(inputCell);

			inputRow = $compile(inputRow)(scope); //to bind ng data
			angular.element(table).append(inputRow);
			c.splitAmount();
		}
	}
	c.areMembersEmpty = function()
	{
		return c.expenseMembers.length == 0;
	}
	c.deleteRow = function(rowId){
		var row = document.getElementById('row_'+rowId);
		if(row)
		{
			row.remove();
			delete c.expenseMembers[rowId];
			c.splitAmount();
		}
	}
	c.onSplitEqualChanged = function(){
		c.splitAmount();
	}
	c.splitAmount = function()
	{
		if(c.expenseObj.splitEqually) 
		{
			var memberCount = Object.keys(c.expenseMembers).length;
			var splitAmount = c.expenseObj.amount/memberCount;
			for (var memberId in c.expenseMembers) {
				c.expenseMembers[memberId].amount = splitAmount;
			}
		}
		c.checkInputValidity();
	}
	c.onAmountChanged = function()
	{
		c.splitAmount();
	}
	c.onCancel = function()
	{
		c.showExpenseForm = false;
		c.clearFormValues();
	}
	c.checkInputValidity = function()
	{
		if(c.expenseObj && c.expenseObj.paidBy && c.expenseObj.amount > 0 && Object.keys(c.expenseMembers).length > 0)
			c.areInputsValid = true;
		else
			c.areInputsValid = false;
	}
	c.clearFormValues = function(){
		c.expenseObj.paidBy = scope.user.sys_id;
		c.expenseObj.amount = 0;
		c.expenseObj.expenseName = '';
		c.expenseObj.splitEqually = true;
		c.areInputsValid = false;
	}
	
	c.clearFormValues();
};]]></client_script>
        <controller_as>c</controller_as>
        <css>#parentBody
{
  margin:10px;
}
td,th{
  padding:5px;
}
table
{
  margin:15px 0px;
}
.checkboxStyle
{
  margin:0px 5px 0px 0px;
}
#addMemberbtn
{
  margin:0 0 0 5px;
}
.expenseInput,th
{
  width:200px;
  height:25px;
}
.splitInput
{
  height:25px;
  width:150px;
}
.closeBtn
{
  height:25px;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>add_expense</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Add expense</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	
	var getSplitUsers = function()
	{
			data.memberList = [];
			var userRecords = new GlideRecord('sys_user');
			userRecords.orderByDesc('name');
			userRecords.addEncodedQuery('nameSTARTSWITHs');
			userRecords.setLimit(5);
			userRecords.query();
			var memberDetails;
			while(userRecords.next())
			{
				memberDetails = {};
				$sp.getRecordDisplayValues(memberDetails, userRecords, 'sys_id,name');
				data.memberList.push(memberDetails);
			}
	}
	getSplitUsers();
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-04 13:31:36</sys_created_on>
        <sys_id>7cc4681a7fe60210d94a0cd10d86654b</sys_id>
        <sys_mod_count>186</sys_mod_count>
        <sys_name>Add expense</sys_name>
        <sys_package display_value="Splitwise" source="sn_splitwise">a8747a317f220210d94a0cd10d86659d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Splitwise">a8747a317f220210d94a0cd10d86659d</sys_scope>
        <sys_update_name>sp_widget_7cc4681a7fe60210d94a0cd10d86654b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-06-06 07:38:02</sys_updated_on>
        <template><![CDATA[<div id="parentBody">
  <!-- your widget template -->
  <button id="addExpenseBtn" ng-click="c.onAddExpense()" ng-show="!c.showExpenseForm">
    Add Expense
  </button>
  <div id="expenseForm" ng-if="c.showExpenseForm">
    <form>
      <table id="expenseTable">
        <tr>
          <td>
            <label for="expenseName">Expense Name:</label>
          </td>
          <td>
            <input type="text" id="expenseName" 
                   ng-model="c.expenseObj.expenseName" ng-change="c.checkInputValidity()"
                   class="expenseInput"><br>
          </td>
        </tr>
        <tr>
          <td>
            <label for="paidBy">Paid by:</label>
          </td>
          <td>
            <select ng-model="c.expenseObj.paidBy" class="expenseInput"
                    ng-options='member.sys_id as member.name for member in c.memberList'>
            </select>
          </td>
        </tr>
        <tr>
          <td>
            <label for="amount">Amount:</label>
          </td>
          <td>
            <input type="number" id="amount"
                   ng-model="c.expenseObj.amount" 
                   ng-change="c.onAmountChanged()"
                   class="expenseInput"><br>
          </td>
        </tr>
      </table>
      <table id="splittingTable">
        <tr>
          <td>
            <input type="checkbox" id="splitEqual" 
                   ng-model="c.expenseObj.splitEqually" ng-change="c.onSplitEqualChanged()"
                   class="checkboxStyle" ng-disabled="c.areMembersEmpty()">
            <label for="splitEqual" id="splitEqualLabel" class="checkboxLabelStyle">Split equally</label>
          </td>
        </tr>
        <tr>
          <th>Member name</th>
          <th>Amount</th>
        </tr>
      </table>
      <button id="addMemberbtn" ng-click="c.onAddMember()">
        Add member
      </button>
      <br>
      <br>
      <input type="submit" ng-disabled="!c.areInputsValid">
      <button ng-click="c.onCancel()">
        Cancel
      </button>
    </form>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
