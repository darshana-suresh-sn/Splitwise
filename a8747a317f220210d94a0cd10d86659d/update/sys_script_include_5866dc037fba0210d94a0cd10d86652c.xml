<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>sn_splitwise.CalcBalanceOnExpense</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Calculate balance on creation of an expense distribution record and update balance table</description>
        <mobile_callable>false</mobile_callable>
        <name>CalcBalanceOnExpense</name>
        <script><![CDATA[function CalcBalanceOnExpense(paid_by, member, amount_owed){
	// If amount is owed to self, no change is needed
	if(paid_by!=member && amount_owed!=0)
	{
		//check if user already owes this member
		var gr = new GlideRecord('sn_splitwise_balance');
		gr.addQuery('member',member);
		gr.addQuery('owed_to',paid_by);
		gr.query();

		if(gr.next())
		{ 
			//User already owes money to this member, so add to the balance
			gr.setValue('amount',parseFloat(gr.amount.getValue())+parseFloat(amount_owed));
			gr.update();
		}
		else
		{
			//User does not owe this member. Check if member owes user
			gr  = new GlideRecord('sn_splitwise_balance');
			gr.addQuery('member',paid_by);
			gr.addQuery('owed_to',member);
			gr.query();
			if(gr.next())
			{
				//Member owes user, so subtract money to be paid from money owed
				var amount_to_get = parseFloat(gr.amount.getValue()) - parseFloat(amount_owed);
				if(amount_to_get >0)
				{
					//Member still owes user, update the amount owed
					gr.setValue('amount',amount_to_get);
					gr.update();
				}
				else 
				{
					//Member does not owe user anymore
					gr.deleteRecord();					
					if(amount_to_get < 0)
					{
						//User owes member, so add balance record
						gr = new GlideRecord('sn_splitwise_balance');
						gr.initialize();
						gr.member = member;
						gr.amount = 0-amount_to_get;
						gr.owed_to = paid_by;		
						gr.insert();
					}
				}
			}
			else
			{
				//There is no balance b/w user & member, so create new record
				gr = new GlideRecord('sn_splitwise_balance');
				gr.initialize();
				gr.member = member;
				gr.amount = amount_owed;
				gr.owed_to = paid_by;		
				gr.insert();
			}

		}

	}
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-19 06:42:51</sys_created_on>
        <sys_id>5866dc037fba0210d94a0cd10d86652c</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>CalcBalanceOnExpense</sys_name>
        <sys_package display_value="Splitwise" source="sn_splitwise">a8747a317f220210d94a0cd10d86659d</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Splitwise">a8747a317f220210d94a0cd10d86659d</sys_scope>
        <sys_update_name>sys_script_include_5866dc037fba0210d94a0cd10d86652c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-06-20 07:29:59</sys_updated_on>
    </sys_script_include>
</record_update>
